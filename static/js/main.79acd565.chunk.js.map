{"version":3,"sources":["macrometa-white-transparent.png","circle_spinner.gif","Config.js","util.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Config","global","Fremont","London","Mumbai","Singapore","Tokyo","Sydney","deleteUtil","key","data","reduce","acc","elem","_key","concat","Object","toConsumableArray","addOrUpdateUtil","payload","newData","_","cloneDeep","index","findIndex","push","getWsUrl","url","tenant","fabric","Math","floor","random","getProducerUrl","getBaseUrl","makeRegionData","config","keys","obj","label","split","labelPart","toUpperCase","value","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFormChange","name","event","setState","defineProperty","target","state","shouldShowModal","showSnackbar","isEdit","snackbarText","firstName","lastName","emailAddress","firstNameHasError","lastNameHasError","emailAddressHasError","isLoading","lastEditElem","selectedRegionUrl","selectedRegionName","regionModal","availableRegions","baseUrl","wsUrl","producerUrl","loginModal","email","password","wsotp","onFabPress","bind","assertThisInitialized","getOtp","onSavePressed","resetModalData","fetchData","onTextInputFocus","onSocketMessageReceived","connection","undefined","producer","jwtToken","close","_this2","_this$state","self","$","ajax","method","JSON","stringify","dataType","success","jwt","ajaxSetup","initWebSocket","collection","createCollection","when","done","r1","sleep","error","handleSnackbar","type","contentType","processData","cache","exist","collList","result","i","length","console","log","ms","resolve","Promise","setTimeout","headers","Authorization","_this3","then","_ref","otp","WebSocket","onmessage","onopen","onerror","onclose","_ref2","setInterval","send","message","receiveMsg","parse","ackMsg","messageId","atob","_delete","deleteData","addOrUpdateData","isDialog","query","_this$state2","validationObject","trim","validate","snackbarTextSuccess","snackbarTextFail","_this$state3","postData","_this$state$lastEditE","firstname","lastname","objectSpread","element","_this4","_this5","_ref3","react_default","a","createElement","DialogContent_default","DialogContentText_default","TextField_default","onFocus","required","style","display","onChange","newLastEditElem","margin","_this6","_this$state4","Dialog_default","fullWidth","open","DialogTitle_default","id","RadioGroup_default","find","map","region","FormControlLabel_default","control","Radio_default","DialogActions_default","Button_default","disabled","onClick","login","size","variant","color","className","_this7","defaultValue","newfabric","pass","_this8","_this$state5","src","c8dbLogo","alt","height","renderLoginModal","renderRegionModal","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","paddingLeft","TableBody_default","n","component","scope","onEditPressed","fontSize","onRemovePressed","Fab_default","position","bottom","right","onClose","renderDialogContent","Snackbar_default","handleClose","ContentProps","aria-describedby","spinner","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79acd565.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/macrometa-white-transparent.f541fb5a.png\";","module.exports = __webpack_public_path__ + \"static/media/circle_spinner.25ef2804.gif\";","const Config = {\n  global: \"gdn.paas.macrometa.io\",\n  Fremont: \"gdn-us-west.paas.macrometa.io\",\n  London: \"gdn-eu-west.paas.macrometa.io\",\n  Mumbai: \"gdn-ap-west.paas.macrometa.io\",\n  Singapore: \"gdn-ap-south.paas.macrometa.io\",\n  Tokyo: \"gdn-ap-northeast.paas.macrometa.io\",\n  Sydney: \"gdn-ap-sydney.paas.macrometa.io\"\n};\n\nexport default Config;\n","import _ from 'lodash';\n\nexport const getRandomInt = () => Math.floor(Math.random() * Math.floor(99999));\n\nexport const deleteUtil = (key, data) => {\n    const arr = data.reduce((acc, elem) => {\n        const accArray = (key === elem._key) ? acc : [...acc, elem];\n        return accArray;\n    }, []);\n    return arr;\n}\n\nexport const addOrUpdateUtil = (payload, data) => {\n    const { _key } = payload;\n    const newData = _.cloneDeep(data);\n    const index = data.findIndex(elem => elem._key === _key);\n    if (index === -1) {\n        newData.push(payload);\n    } else {\n        newData[index] = payload;\n    }\n    return newData;\n}\n\n\nexport const getWsUrl =(url, tenant, fabric) => `wss://api-${url}/_ws/ws/v2/consumer/persistent/${tenant}/c8local.${fabric}/addresses/${getRandomInt()}`;\n\nexport const getProducerUrl = (url, tenant, fabric) => `wss://api-${url}/_ws/ws/v2/producer/persistent/${tenant}/c8local.${fabric}/addresses`;\n\nexport const getBaseUrl = (url, tenant, fabric) => `https://api-${url}/_tenant/${tenant}/_fabric/${fabric}/cursor`;\n\n\nexport const makeRegionData = config => {\n    const keys = Object.keys(config);\n    const regionData = keys.reduce((acc, key) => {\n        const label = key.split(\"_\").reduce((acc, labelPart) => {\n            return acc + labelPart.toUpperCase() + \" \";\n        }, \"\");\n        const obj = { label, value: config[key] };\n        acc.push(obj);\n        return acc;\n    }, []);\n    return regionData;\n}","import React, { Component } from 'react';\nimport $ from 'jquery'\nimport c8dbLogo from './macrometa-white-transparent.png';\nimport spinner from './circle_spinner.gif';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Config from './Config';\n\nimport {\n  deleteUtil,\n  addOrUpdateUtil,\n  getBaseUrl,\n  getWsUrl,\n  getProducerUrl,\n  makeRegionData\n} from \"./util\";\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldShowModal: false,\n      showSnackbar: false,\n      isEdit: false,\n      snackbarText: '',\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false,\n      data: [],\n      isLoading: true,\n      lastEditElem: null,\n      selectedRegionUrl: \"\",\n      selectedRegionName: \"\",\n      regionModal: false,\n      availableRegions: makeRegionData(Config),\n      baseUrl: '',\n      wsUrl: '',\n      producerUrl: '',\n      loginModal: true,\n      email: \"xxxx@macrometa.io\",\n      fabric: '_system',\n      password: 'xxxx',\n      wsotp: ''\n    };\n\n    this.onFabPress = this.onFabPress.bind(this);\n    this.getOtp = this.getOtp.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.onSavePressed = this.onSavePressed.bind(this);\n    this.resetModalData = this.resetModalData.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.onTextInputFocus = this.onTextInputFocus.bind(this);\n    this.onSocketMessageReceived = this.onSocketMessageReceived.bind(this);\n    this.connection = undefined;\n    this.producer = undefined;\n    this.jwtToken = undefined;\n    this.tenant = undefined;\n  }\n\n  componentWillUnmount() {\n    this.connection.close();\n    this.producer.close();\n  }\n\n  login() {\n    const { email, password, selectedRegionUrl } = this.state;\n    const self = this;\n    const data = {\n      email: email,\n      password: password\n    };\n\n    const url = `https://api-${selectedRegionUrl}/_open/auth`;\n    $.ajax({\n      url,\n      method: 'POST',\n      data: JSON.stringify(data),\n      dataType: 'json',\n      success: (data) => {\n        const { jwt, tenant } = data;\n        this.jwtToken = jwt;\n        this.tenant = tenant;\n        this.setState({\n          regionModal: false,\n          baseUrl: getBaseUrl(selectedRegionUrl, this.tenant, this.state.fabric),\n          wsUrl: getWsUrl(selectedRegionUrl, this.tenant, this.state.fabric),\n          producerUrl: getProducerUrl(selectedRegionUrl, this.tenant, this.state.fabric)\n        }, () => {\n          this.ajaxSetup();\n          this.initWebSocket();\n          var collection = this.createCollection();\n          $.when(collection).done(function (r1) {\n            self.sleep(30000);\n            self.fetchData();\n          });\n          this.fetchData();\n        });\n      },\n      error: () => this.handleSnackbar(\"Auth failed.\")\n    })\n  }\n\n  getOtp() {\n    let url = `https://api-${this.state.selectedRegionUrl}/apid/otp`;\n    return $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url\n    });\n  }\n\n\n  createCollection() {\n    const self = this;\n    let exist = false;\n    let url = `https://api-${this.state.selectedRegionUrl}/_tenant/${this.tenant}/_fabric/${this.state.fabric}/collection`;\n    return $.ajax({\n      type: \"GET\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      success: function (data) {\n        let collList = data.result;\n        for (let i = 0; i < collList.length; i++) {\n          if (\"addresses\" === collList[i].name) {\n            exist = true;\n            console.log(\"Collection exists\");\n            break;\n          }\n          else {\n            exist = false;\n          }\n        }\n        if (exist === false) {\n          self.collection();\n        }\n      }\n    });\n\n  }\n\n  sleep(ms, resolve) {\n    return new Promise(() => setTimeout(resolve, ms));\n  }\n\n  collection() {\n    let url = `https://api-${this.state.selectedRegionUrl}/_tenant/${this.tenant}/_fabric/${this.state.fabric}/collection`;\n    $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify(\n        {\n          \"name\": \"addresses\",\n        }\n      ),\n      success: function (data) {\n        console.log(\"Collection Created\")\n      }\n    });\n  }\n\n  ajaxSetup() {\n    $.ajaxSetup({\n      headers: {\n        Authorization: `bearer ${this.jwtToken}`\n      }\n    });\n  }\n\n  initWebSocket() {\n    this.getOtp().then(({ otp }) => {\n      const { wsUrl } = this.state;\n      this.connection = new WebSocket(`${wsUrl}?otp=${otp}`);\n\n      this.connection.onmessage = this.onSocketMessageReceived;\n\n      this.connection.onopen = () => console.log(\"WS connection established\");\n\n      this.connection.onerror = () => console.log(\"Failed to establish WS connection\");\n\n      this.connection.onclose = () => console.log(\"Closing WS connection\");\n    });\n    \n    this.getOtp().then(({ otp }) => {\n      const { producerUrl } = this.state;\n      this.producer = new WebSocket(`${producerUrl}?otp=${otp}`);\n\n      this.producer.onopen = () => {\n        setInterval(() => {\n          this.producer.send(JSON.stringify({ 'payload': 'noop' }))\n        }, 30000);\n      }\n    });\n\n  }\n\n  deleteData(key) {\n    this.setState({ data: deleteUtil(key, this.state.data) });\n  }\n\n  addOrUpdateData(payload) {\n    this.setState({ data: addOrUpdateUtil(payload, this.state.data) });\n  }\n\n  onSocketMessageReceived(message) {\n    var receiveMsg = JSON.parse(message.data);\n    const ackMsg = { \"messageId\": receiveMsg.messageId };\n    this.connection.send(JSON.stringify(ackMsg));\n    if (receiveMsg.payload !== 'noop') {\n      const payload = JSON.parse(atob(receiveMsg.payload));\n      payload._delete? this.deleteData(payload._key) : this.addOrUpdateData(payload);\n    }\n  }\n\n  fetchData(isDialog) {\n    var self = this;\n    const { baseUrl: url } = this.state;\n\n    this.setState({ isLoading: true }, () => {\n\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: JSON.stringify({\n          \"query\": \"FOR entry IN addresses RETURN entry\"\n        }),\n        success: function (data) {\n          if (!self.state.shouldShowModal) {\n            self.resetModalData();\n          }\n          self.setState({\n            isLoading: false,\n            data: data.result\n          });\n\n        },\n        error: function (data) {\n          if (isDialog) {\n            self.resetModalData();\n          }\n          self.setState({\n            isLoading: false,\n          });\n          self.handleSnackbar(\"Could not fetch data\");\n          console.log('Error:', data);\n        }\n      });\n    });\n  }\n\n  onFabPress() {\n    this.setState({ shouldShowModal: true })\n  }\n\n  resetModalData() {\n    this.setState({\n      lastEditElem: undefined,\n      shouldShowModal: false,\n      isEdit: false,\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false\n    });\n  }\n\n  handleFormChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n\n  validate() {\n    const { firstName, lastName, emailAddress } = this.state;\n    const validationObject = {};\n    if (!this.state.isEdit) {\n      if (!firstName.trim()) {\n        validationObject.firstNameHasError = true;\n      }\n      if (!lastName.trim()) {\n        validationObject.lastNameHasError = true;\n      }\n      if (!emailAddress.trim()) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n    else {\n      if (!this.state.lastEditElem.email.trim()) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n\n    return validationObject;\n  }\n\n  onSavePressed() {\n\n    const self = this;\n    const { baseUrl: url } = this.state;\n\n    const validationObject = this.validate();\n    if (Object.keys(validationObject).length === 0) {\n\n      let snackbarTextSuccess = 'Contact details added successfully';\n      let snackbarTextFail = 'Contact details could not be added';\n      const { firstName, lastName, emailAddress, isEdit } = this.state;\n      let postData = `INSERT { \"firstname\":\"${firstName}\", \"lastname\":\"${lastName}\", \"email\":\"${emailAddress}\" } INTO addresses`;\n      if (isEdit) {\n        const { lastEditElem: { _key, firstname, lastname, email } } = this.state;\n        postData = `UPDATE \"${_key}\" WITH { firstname:\"${firstname}\", lastname:\"${lastname}\", email:\"${email}\" } IN addresses`;\n        snackbarTextSuccess = 'Contact details updated successfully';\n        snackbarTextFail = 'Contact details could not be updated';\n      }\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: JSON.stringify({ \"query\": postData }),\n        success: function () {\n          self.handleSnackbar(snackbarTextSuccess);\n          self.resetModalData();\n        },\n        error: function (data) {\n          self.handleSnackbar(snackbarTextFail);\n          self.resetModalData();\n          console.log('Error:', data);\n        }\n      });\n\n    }\n    else {\n      //show error\n      this.setState({ ...validationObject });\n    }\n  }\n\n  onTextInputFocus(name) {\n    if (this.state[`${name}HasError`]) {\n      this.setState({ [`${name}HasError`]: false });\n    }\n  }\n\n  onEditPressed(element) {\n    if (element) {\n      //show edit modal\n      this.setState({ shouldShowModal: true, isEdit: true, lastEditElem: element });\n    }\n  }\n\n  onRemovePressed(element) {\n    const self = this;\n    const { baseUrl: url } = this.state;\n    if (element) {\n      this.setState({ lastEditElem: element }, () => {\n        $.ajax({\n          type: \"POST\",\n          contentType: 'text/plain',\n          processData: false,\n          cache: false,\n          url,\n          data: JSON.stringify({ \"query\": `REMOVE \"${element._key}\" IN addresses` }),\n          success: function () {\n            self.handleSnackbar(\"Contact details removed successfully\");\n            self.resetModalData();\n          },\n          error: function (data) {\n            self.handleSnackbar(\"Contact details could not be removed\");\n            self.resetModalData();\n            console.log('Error:', data);\n          }\n        });\n      });\n    }\n  }\n\n  handleSnackbar(snackbarText) {\n    this.setState({ showSnackbar: true, snackbarText: snackbarText }, () => {\n      setTimeout(() => {\n        this.setState({ showSnackbar: false, snackbarText: '' });\n      }, 2000);\n    });\n  };\n\n  renderDialogContent() {\n    const { firstname, lastname, email } = (this.state.lastEditElem || {});\n    let dialogContent = (\n      <DialogContent>\n        <DialogContentText>\n          {this.state.isEdit ? 'Fill in the fields to be updated.' : 'Provide all the details to add a new contact.'}\n        </DialogContentText>\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"firstName\")}\n          required={!this.state.isEdit}\n          error={this.state.firstNameHasError}\n          style={{ display: 'block' }}\n          label=\"First Name\"\n          value={this.state.isEdit ? firstname : this.state.firstName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.firstname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('firstName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"lastName\")}\n          required={!this.state.isEdit}\n          error={this.state.lastNameHasError}\n          style={{ display: 'block' }}\n          label=\"Last Name\"\n          value={this.state.isEdit ? lastname : this.state.lastName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.lastname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('lastName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"emailAddress\")}\n          required\n          error={this.state.emailAddressHasError}\n          style={{ display: 'block' }}\n          label=\"Email\"\n          value={this.state.isEdit ? email : this.state.emailAddress}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.email = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('emailAddress')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n      </DialogContent>\n    );\n    return dialogContent;\n  }\n\n  renderRegionModal() {\n    const { regionModal, availableRegions, selectedRegionUrl } = this.state;\n    return (\n      <Dialog\n        fullWidth\n        open={regionModal}\n      >\n        <DialogTitle id=\"form-dialog-title\">Select Region:</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            onChange={event => {\n              const selectedRegionUrl = event.target.value;\n              const selectedRegionName = availableRegions.find(elem => elem.value === selectedRegionUrl).label;\n              this.setState({ selectedRegionUrl, selectedRegionName })\n            }\n            }\n            value={selectedRegionUrl}\n          >\n            {\n              availableRegions.map(region => <FormControlLabel key={region.label} value={region.value} control={<Radio />} label={region.label} />)\n            }\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={!selectedRegionUrl}\n            onClick={() => this.login()}\n            size=\"small\" variant=\"text\" color=\"primary\">\n            <span className=\"actions\">CONFIRM</span>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n\n  renderLoginModal() {\n    let { loginModal } = this.state;\n    return (\n      <Dialog\n        fullWidth\n        open={loginModal}\n      >\n        <DialogTitle id=\"form-dialog-title\">Please login to your Macrometa account:</DialogTitle>\n        <DialogContent>\n          <TextField\n            onFocus={() => this.onTextInputFocus(\"email\")}\n            style={{ display: 'block' }}\n            label=\"Email\"\n            defaultValue={this.state.email}\n            onChange={(event) => {\n              const email = event.target.value;\n              this.setState({ email });\n            }}\n            margin=\"normal\"\n          />\n          <TextField\n            onFocus={() => this.onTextInputFocus(\"fabric\")}\n            style={{ display: 'block' }}\n            label=\"Fabric \"\n            defaultValue={this.state.fabric}\n            onChange={(event) => {\n              const newfabric = event.target.value;\n              this.setState({ fabric: newfabric });\n\n            }}\n            margin=\"normal\"\n          />\n\n          <TextField type='password'\n\n            onFocus={() => this.onTextInputFocus(\"password\")}\n            style={{ display: 'block' }}\n            label=\"Password \"\n            defaultValue={this.state.password}\n            onChange={(event) => {\n              const pass = event.target.value;\n              this.setState({ password: pass });\n\n            }}\n            margin=\"normal\"\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            onClick={() => this.setState({\n              loginModal: false,\n              regionModal: true\n            })}\n            size=\"small\" variant=\"text\" color=\"primary\">\n            <span className=\"actions\">CONFIRM</span>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  render() {\n    const { data, selectedRegionName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={c8dbLogo} alt=\"logo\" style={{ height: '100px' }} />\n          <h1 className=\"App-title\">Address book is connected to {selectedRegionName}</h1>\n        </header>\n        {this.renderLoginModal()}\n        {this.renderRegionModal()}\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>KEY</TableCell>\n                <TableCell>First Name</TableCell>\n                <TableCell>Last Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell style={{ paddingLeft: '40px' }}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map(n => {\n                return (\n                  <TableRow key={n._key}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {n._key}\n                    </TableCell>\n                    <TableCell>{n.firstname}</TableCell>\n                    <TableCell>{n.lastname}</TableCell>\n                    <TableCell>{n.email}</TableCell>\n                    <TableCell>{\n                      <div>\n                        <Button\n                          onClick={() => { this.onEditPressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"primary\">\n                          <span style={{ fontSize: \"10px\" }}>Edit</span>\n                        </Button>\n                        <Button\n                          onClick={() => { this.onRemovePressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"secondary\">\n                          <span style={{ fontSize: \"10px\" }}>Remove</span>\n                        </Button>\n                      </div>\n                    }</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n        <Fab\n          onClick={this.onFabPress}\n          style={{ position: 'fixed', bottom: '70px', right: '70px' }} size=\"large\" color=\"primary\">\n          <span style={{ fontSize: \"30px\" }}>+</span>\n        </Fab>\n        {/* add new contact dialog*/}\n        <Dialog\n          onClose={this.resetModalData}\n          open={this.state.shouldShowModal}\n        >\n          <DialogTitle id=\"form-dialog-title\">{this.state.isEdit ? 'Edit contact details' : 'Add contact details'}</DialogTitle>\n          {this.renderDialogContent()}\n          <DialogActions>\n            <Button\n              onClick={() => { this.onSavePressed() }}\n              size=\"small\" variant=\"text\" color=\"primary\">\n              <span className=\"actions\">{this.state.isEdit ? 'UPDATE' : 'SAVE'}</span>\n            </Button>\n            <Button\n              onClick={this.resetModalData}\n              size=\"small\" variant=\"text\" color=\"secondary\">\n              <span className=\"actions\">DISCARD</span>\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Snackbar\n          open={this.state.showSnackbar}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.state.snackbarText}</span>}\n        />\n        {\n          this.state.isLoading && <img src={spinner} alt=\"logo\" className=\"spinner\" />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}