{"version":3,"sources":["macrometa-white-transparent.png","circle_spinner.gif","Config.js","util.js","App.js","serviceWorker.js","index.js"],"names":["Config","global","Fremont","London","Mumbai","Singapore","Tokyo","Sydney","deleteUtil","key","data","reduce","acc","elem","_key","addOrUpdateUtil","payload","newData","_","cloneDeep","index","findIndex","push","getWsUrl","url","tenant","fabric","Math","floor","random","getProducerUrl","getBaseUrl","App","props","config","handleFormChange","name","event","setState","target","value","state","shouldShowModal","showSnackbar","isEdit","snackbarText","firstName","lastName","emailAddress","firstNameHasError","lastNameHasError","emailAddressHasError","isLoading","lastEditElem","selectedRegionUrl","selectedRegionName","regionModal","availableRegions","Object","keys","label","split","labelPart","toUpperCase","obj","baseUrl","wsUrl","producerUrl","loginModal","email","password","wsotp","emailRegex","RegExp","onFabPress","bind","getOtp","onSavePressed","resetModalData","fetchData","onTextInputFocus","onSocketMessageReceived","connection","undefined","producer","jwtToken","this","close","self","$","ajax","method","JSON","stringify","dataType","success","jwt","ajaxSetup","initWebSocket","collection","createCollection","when","done","r1","sleep","error","handleSnackbar","type","contentType","processData","cache","exist","collList","result","i","length","console","log","ms","resolve","Promise","setTimeout","headers","Authorization","then","otp","WebSocket","onmessage","onopen","onerror","onclose","setInterval","send","message","receiveMsg","parse","ackMsg","messageId","atob","_delete","deleteData","addOrUpdateData","isDialog","validationObject","trim","test","validate","snackbarTextSuccess","snackbarTextFail","postData","firstname","lastname","element","DialogContent","DialogContentText","TextField","onFocus","required","style","display","inputProps","maxLength","onChange","newLastEditElem","margin","Dialog","fullWidth","open","DialogTitle","id","RadioGroup","find","map","region","FormControlLabel","control","Radio","DialogActions","Button","disabled","onClick","login","size","variant","color","className","defaultValue","newfabric","pass","src","c8dbLogo","alt","height","renderLoginModal","renderRegionModal","Paper","Table","TableHead","TableRow","TableCell","paddingLeft","TableBody","n","component","scope","onEditPressed","fontSize","onRemovePressed","Fab","position","bottom","right","onClose","renderDialogContent","Snackbar","handleClose","ContentProps","spinner","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.800c37a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/macrometa-white-transparent.c34a418e.png\";","export default __webpack_public_path__ + \"static/media/circle_spinner.ba4ecef0.gif\";","const Config = {\n  global: \"gdn.paas.macrometa.io\",\n  Fremont: \"gdn-us-west.paas.macrometa.io\",\n  London: \"gdn-eu-west.paas.macrometa.io\",\n  Mumbai: \"gdn-ap-west.paas.macrometa.io\",\n  Singapore: \"gdn-ap-south.paas.macrometa.io\",\n  Tokyo: \"gdn-ap-northeast.paas.macrometa.io\",\n  Sydney: \"gdn-ap-sydney.paas.macrometa.io\"\n};\n\nexport default Config;\n","import _ from 'lodash';\n\nexport const getRandomInt = () => Math.floor(Math.random() * Math.floor(99999));\n\nexport const deleteUtil = (key, data) => {\n    const arr = data.reduce((acc, elem) => {\n        const accArray = (key === elem._key) ? acc : [...acc, elem];\n        return accArray;\n    }, []);\n    return arr;\n}\n\nexport const addOrUpdateUtil = (payload, data) => {\n    const { _key } = payload;\n    const newData = _.cloneDeep(data);\n    const index = data.findIndex(elem => elem._key === _key);\n    if (index === -1) {\n        newData.push(payload);\n    } else {\n        newData[index] = payload;\n    }\n    return newData;\n}\n\n\nexport const getWsUrl =(url, tenant, fabric) => `wss://api-${url}/_ws/ws/v2/consumer/persistent/${tenant}/c8local.${fabric}/addresses/${getRandomInt()}`;\n\nexport const getProducerUrl = (url, tenant, fabric) => `wss://api-${url}/_ws/ws/v2/producer/persistent/${tenant}/c8local.${fabric}/addresses`;\n\nexport const getBaseUrl = (url, tenant, fabric) => `https://api-${url}/_tenant/${tenant}/_fabric/${fabric}/cursor`;\n\n\nexport const makeRegionData = config => {\n    const keys = Object.keys(config);\n    const regionData = keys.reduce((acc, key) => {\n        const label = key.split(\"_\").reduce((acc, labelPart) => {\n            return acc + labelPart.toUpperCase() + \" \";\n        }, \"\");\n        const obj = { label, value: config[key] };\n        acc.push(obj);\n        return acc;\n    }, []);\n    return regionData;\n}","import React, { Component } from 'react';\nimport $ from 'jquery'\nimport c8dbLogo from './macrometa-white-transparent.png';\nimport spinner from './circle_spinner.gif';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Config from './Config';\n\nimport {\n  deleteUtil,\n  addOrUpdateUtil,\n  getBaseUrl,\n  getWsUrl,\n  getProducerUrl,\n  makeRegionData\n} from \"./util\";\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldShowModal: false,\n      showSnackbar: false,\n      isEdit: false,\n      snackbarText: '',\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false,\n      data: [],\n      isLoading: true,\n      lastEditElem: null,\n      selectedRegionUrl: \"\",\n      selectedRegionName: \"\",\n      regionModal: false,\n      availableRegions: makeRegionData(Config),\n      baseUrl: '',\n      wsUrl: '',\n      producerUrl: '',\n      loginModal: true,\n      email: \"demo@macrometa.io\",\n      fabric: '_system',\n      password: 'demo',\n      wsotp: '',\n      emailRegex: new RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/)\n    };\n\n    this.onFabPress = this.onFabPress.bind(this);\n    this.getOtp = this.getOtp.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.onSavePressed = this.onSavePressed.bind(this);\n    this.resetModalData = this.resetModalData.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.onTextInputFocus = this.onTextInputFocus.bind(this);\n    this.onSocketMessageReceived = this.onSocketMessageReceived.bind(this);\n    this.connection = undefined;\n    this.producer = undefined;\n    this.jwtToken = undefined;\n    this.tenant = undefined;\n  }\n\n  componentWillUnmount() {\n    this.connection.close();\n    this.producer.close();\n  }\n\n  login() {\n    const { email, password, selectedRegionUrl } = this.state;\n    const self = this;\n    const data = {\n      email: email,\n      password: password\n    };\n\n    const url = `https://api-${selectedRegionUrl}/_open/auth`;\n    $.ajax({\n      url,\n      method: 'POST',\n      data: JSON.stringify(data),\n      dataType: 'json',\n      success: (data) => {\n        const { jwt, tenant } = data;\n        this.jwtToken = jwt;\n        this.tenant = tenant;\n        this.setState({\n          regionModal: false,\n          baseUrl: getBaseUrl(selectedRegionUrl, this.tenant, this.state.fabric),\n          wsUrl: getWsUrl(selectedRegionUrl, this.tenant, this.state.fabric),\n          producerUrl: getProducerUrl(selectedRegionUrl, this.tenant, this.state.fabric)\n        }, () => {\n          this.ajaxSetup();\n          this.initWebSocket();\n          var collection = this.createCollection();\n          $.when(collection).done(function (r1) {\n            self.sleep(30000);\n            self.fetchData();\n          });\n          this.fetchData();\n        });\n      },\n      error: () => this.handleSnackbar(\"Auth failed.\")\n    })\n  }\n\n  getOtp() {\n    let url = `https://api-${this.state.selectedRegionUrl}/apid/otp`;\n    return $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url\n    });\n  }\n\n\n  createCollection() {\n    const self = this;\n    let exist = false;\n    let url = `https://api-${this.state.selectedRegionUrl}/_tenant/${this.tenant}/_fabric/${this.state.fabric}/collection`;\n    return $.ajax({\n      type: \"GET\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      success: function (data) {\n        let collList = data.result;\n        for (let i = 0; i < collList.length; i++) {\n          if (\"addresses\" === collList[i].name) {\n            exist = true;\n            console.log(\"Collection exists\");\n            break;\n          }\n          else {\n            exist = false;\n          }\n        }\n        if (exist === false) {\n          self.collection();\n        }\n      }\n    });\n\n  }\n\n  sleep(ms, resolve) {\n    return new Promise(() => setTimeout(resolve, ms));\n  }\n\n  collection() {\n    let url = `https://api-${this.state.selectedRegionUrl}/_tenant/${this.tenant}/_fabric/${this.state.fabric}/collection`;\n    $.ajax({\n      type: \"POST\",\n      contentType: 'text/plain',\n      processData: false,\n      cache: false,\n      url,\n      data: JSON.stringify(\n        {\n          \"name\": \"addresses\",\n        }\n      ),\n      success: function (data) {\n        console.log(\"Collection Created\")\n      }\n    });\n  }\n\n  ajaxSetup() {\n    $.ajaxSetup({\n      headers: {\n        Authorization: `bearer ${this.jwtToken}`\n      }\n    });\n  }\n\n  initWebSocket() {\n    this.getOtp().then(({ otp }) => {\n      const { wsUrl } = this.state;\n      this.connection = new WebSocket(`${wsUrl}?otp=${otp}`);\n\n      this.connection.onmessage = this.onSocketMessageReceived;\n\n      this.connection.onopen = () => console.log(\"WS connection established\");\n\n      this.connection.onerror = () => console.log(\"Failed to establish WS connection\");\n\n      this.connection.onclose = () => console.log(\"Closing WS connection\");\n    });\n    \n    this.getOtp().then(({ otp }) => {\n      const { producerUrl } = this.state;\n      this.producer = new WebSocket(`${producerUrl}?otp=${otp}`);\n\n      this.producer.onopen = () => {\n        setInterval(() => {\n          this.producer.send(JSON.stringify({ 'payload': 'noop' }))\n        }, 30000);\n      }\n    });\n\n  }\n\n  deleteData(key) {\n    this.setState({ data: deleteUtil(key, this.state.data) });\n  }\n\n  addOrUpdateData(payload) {\n    this.setState({ data: addOrUpdateUtil(payload, this.state.data) });\n  }\n\n  onSocketMessageReceived(message) {\n    var receiveMsg = JSON.parse(message.data);\n    const ackMsg = { \"messageId\": receiveMsg.messageId };\n    this.connection.send(JSON.stringify(ackMsg));\n    if (receiveMsg.payload !== 'noop') {\n      const payload = JSON.parse(atob(receiveMsg.payload));\n      payload._delete? this.deleteData(payload._key) : this.addOrUpdateData(payload);\n    }\n  }\n\n  fetchData(isDialog) {\n    var self = this;\n    const { baseUrl: url } = this.state;\n\n    this.setState({ isLoading: true }, () => {\n\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: JSON.stringify({\n          \"query\": \"FOR entry IN addresses RETURN entry\"\n        }),\n        success: function (data) {\n          if (!self.state.shouldShowModal) {\n            self.resetModalData();\n          }\n          self.setState({\n            isLoading: false,\n            data: data.result\n          });\n\n        },\n        error: function (data) {\n          if (isDialog) {\n            self.resetModalData();\n          }\n          self.setState({\n            isLoading: false,\n          });\n          self.handleSnackbar(\"Could not fetch data\");\n          console.log('Error:', data);\n        }\n      });\n    });\n  }\n\n  onFabPress() {\n    this.setState({ shouldShowModal: true })\n  }\n\n  resetModalData() {\n    this.setState({\n      lastEditElem: undefined,\n      shouldShowModal: false,\n      isEdit: false,\n      firstName: '',\n      lastName: '',\n      emailAddress: '',\n      firstNameHasError: false,\n      lastNameHasError: false,\n      emailAddressHasError: false\n    });\n  }\n\n  handleFormChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n\n  validate() {\n    const { firstName, lastName, emailAddress } = this.state;\n    const validationObject = {};\n    if (!this.state.isEdit) {\n      if (!firstName.trim()) {\n        validationObject.firstNameHasError = true;\n      }\n      if (!lastName.trim()) {\n        validationObject.lastNameHasError = true;\n      }\n      if (!emailAddress.trim() || !this.state.emailRegex.test(emailAddress.trim())) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n    else {\n      if (!this.state.lastEditElem.email.trim() || !this.state.emailRegex.test(this.state.lastEditElem.email.trim())) {\n        validationObject.emailAddressHasError = true;\n      }\n    }\n\n    return validationObject;\n  }\n\n  onSavePressed() {\n\n    const self = this;\n    const { baseUrl: url } = this.state;\n\n    const validationObject = this.validate();\n    if (Object.keys(validationObject).length === 0) {\n\n      let snackbarTextSuccess = 'Contact details added successfully';\n      let snackbarTextFail = 'Contact details could not be added';\n      const { firstName, lastName, emailAddress, isEdit } = this.state;\n      let postData = `INSERT { \"firstname\":\"${firstName}\", \"lastname\":\"${lastName}\", \"email\":\"${emailAddress}\" } INTO addresses`;\n      if (isEdit) {\n        const { lastEditElem: { _key, firstname, lastname, email } } = this.state;\n        postData = `UPDATE \"${_key}\" WITH { firstname:\"${firstname}\", lastname:\"${lastname}\", email:\"${email}\" } IN addresses`;\n        snackbarTextSuccess = 'Contact details updated successfully';\n        snackbarTextFail = 'Contact details could not be updated';\n      }\n      $.ajax({\n        type: \"POST\",\n        contentType: 'text/plain',\n        processData: false,\n        cache: false,\n        url,\n        data: JSON.stringify({ \"query\": postData }),\n        success: function () {\n          self.handleSnackbar(snackbarTextSuccess);\n          self.resetModalData();\n        },\n        error: function (data) {\n          self.handleSnackbar(snackbarTextFail);\n          self.resetModalData();\n          console.log('Error:', data);\n        }\n      });\n\n    }\n    else {\n      //show error\n      this.setState({ ...validationObject });\n    }\n  }\n\n  onTextInputFocus(name) {\n    if (this.state[`${name}HasError`]) {\n      this.setState({ [`${name}HasError`]: false });\n    }\n  }\n\n  onEditPressed(element) {\n    if (element) {\n      //show edit modal\n      this.setState({ shouldShowModal: true, isEdit: true, lastEditElem: element });\n    }\n  }\n\n  onRemovePressed(element) {\n    const self = this;\n    const { baseUrl: url } = this.state;\n    if (element) {\n      this.setState({ lastEditElem: element }, () => {\n        $.ajax({\n          type: \"POST\",\n          contentType: 'text/plain',\n          processData: false,\n          cache: false,\n          url,\n          data: JSON.stringify({ \"query\": `REMOVE \"${element._key}\" IN addresses` }),\n          success: function () {\n            self.handleSnackbar(\"Contact details removed successfully\");\n            self.resetModalData();\n          },\n          error: function (data) {\n            self.handleSnackbar(\"Contact details could not be removed\");\n            self.resetModalData();\n            console.log('Error:', data);\n          }\n        });\n      });\n    }\n  }\n\n  handleSnackbar(snackbarText) {\n    this.setState({ showSnackbar: true, snackbarText: snackbarText }, () => {\n      setTimeout(() => {\n        this.setState({ showSnackbar: false, snackbarText: '' });\n      }, 2000);\n    });\n  };\n\n  renderDialogContent() {\n    const { firstname, lastname, email } = (this.state.lastEditElem || {});\n    let dialogContent = (\n      <DialogContent>\n        <DialogContentText>\n          {this.state.isEdit ? 'Fill in the fields to be updated.' : 'Provide all the details to add a new contact.'}\n        </DialogContentText>\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"firstName\")}\n          required={!this.state.isEdit}\n          error={this.state.firstNameHasError}\n          style={{ display: 'block' }}\n          label=\"First Name\"\n          inputProps={{ maxLength: 24 }}\n          value={this.state.isEdit ? firstname : this.state.firstName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.firstname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('firstName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"lastName\")}\n          required={!this.state.isEdit}\n          error={this.state.lastNameHasError}\n          style={{ display: 'block' }}\n          label=\"Last Name\"\n          inputProps={{ maxLength: 24 }}\n          value={this.state.isEdit ? lastname : this.state.lastName}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.lastname = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('lastName')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n        <TextField\n          onFocus={() => this.onTextInputFocus(\"emailAddress\")}\n          required\n          error={this.state.emailAddressHasError}\n          style={{ display: 'block' }}\n          label=\"Email\"\n          value={this.state.isEdit ? email : this.state.emailAddress}\n          onChange={(event) => {\n            if (this.state.isEdit) {\n              const newLastEditElem = { ...this.state.lastEditElem };\n              newLastEditElem.email = event.target.value;\n              this.setState({ lastEditElem: newLastEditElem });\n            } else {\n              this.handleFormChange('emailAddress')(event);\n            }\n          }}\n          margin=\"normal\"\n        />\n      </DialogContent>\n    );\n    return dialogContent;\n  }\n\n  renderRegionModal() {\n    const { regionModal, availableRegions, selectedRegionUrl } = this.state;\n    return (\n      <Dialog\n        fullWidth\n        open={regionModal}\n      >\n        <DialogTitle id=\"form-dialog-title\">Select Region:</DialogTitle>\n        <DialogContent>\n          <RadioGroup\n            onChange={event => {\n              const selectedRegionUrl = event.target.value;\n              const selectedRegionName = availableRegions.find(elem => elem.value === selectedRegionUrl).label;\n              this.setState({ selectedRegionUrl, selectedRegionName })\n            }\n            }\n            value={selectedRegionUrl}\n          >\n            {\n              availableRegions.map(region => <FormControlLabel key={region.label} value={region.value} control={<Radio />} label={region.label} />)\n            }\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={!selectedRegionUrl}\n            onClick={() => this.login()}\n            size=\"small\" variant=\"text\" color=\"primary\">\n            <span className=\"actions\">CONFIRM</span>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n\n  renderLoginModal() {\n    let { loginModal } = this.state;\n    return (\n      <Dialog\n        fullWidth\n        open={loginModal}\n      >\n        <DialogTitle id=\"form-dialog-title\">Please login to your Macrometa account:</DialogTitle>\n        <DialogContent>\n          <TextField\n            onFocus={() => this.onTextInputFocus(\"email\")}\n            style={{ display: 'block' }}\n            label=\"Email\"\n            defaultValue={this.state.email}\n            onChange={(event) => {\n              const email = event.target.value;\n              this.setState({ email });\n            }}\n            margin=\"normal\"\n          />\n          <TextField\n            onFocus={() => this.onTextInputFocus(\"fabric\")}\n            style={{ display: 'block' }}\n            label=\"Fabric \"\n            defaultValue={this.state.fabric}\n            onChange={(event) => {\n              const newfabric = event.target.value;\n              this.setState({ fabric: newfabric });\n\n            }}\n            margin=\"normal\"\n          />\n\n          <TextField type='password'\n\n            onFocus={() => this.onTextInputFocus(\"password\")}\n            style={{ display: 'block' }}\n            label=\"Password \"\n            defaultValue={this.state.password}\n            onChange={(event) => {\n              const pass = event.target.value;\n              this.setState({ password: pass });\n\n            }}\n            margin=\"normal\"\n          />\n        </DialogContent>\n\n        <DialogActions>\n          <Button\n            onClick={() => this.setState({\n              loginModal: false,\n              regionModal: true\n            })}\n            size=\"small\" variant=\"text\" color=\"primary\">\n            <span className=\"actions\">CONFIRM</span>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  render() {\n    const { data, selectedRegionName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={c8dbLogo} alt=\"logo\" style={{ height: '100px' }} />\n          <h1 className=\"App-title\">Address book is connected to {selectedRegionName}</h1>\n        </header>\n        {this.renderLoginModal()}\n        {this.renderRegionModal()}\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>KEY</TableCell>\n                <TableCell>First Name</TableCell>\n                <TableCell>Last Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell style={{ paddingLeft: '40px' }}>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {data.map(n => {\n                return (\n                  <TableRow key={n._key}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {n._key}\n                    </TableCell>\n                    <TableCell>{n.firstname}</TableCell>\n                    <TableCell>{n.lastname}</TableCell>\n                    <TableCell>{n.email}</TableCell>\n                    <TableCell>{\n                      <div>\n                        <Button\n                          onClick={() => { this.onEditPressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"primary\">\n                          <span style={{ fontSize: \"10px\" }}>Edit</span>\n                        </Button>\n                        <Button\n                          onClick={() => { this.onRemovePressed(n) }}\n                          size=\"small\" variant=\"text\" color=\"secondary\">\n                          <span style={{ fontSize: \"10px\" }}>Remove</span>\n                        </Button>\n                      </div>\n                    }</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Paper>\n        <Fab\n          onClick={this.onFabPress}\n          style={{ position: 'fixed', bottom: '70px', right: '70px' }} size=\"large\" color=\"primary\">\n          <span style={{ fontSize: \"30px\" }}>+</span>\n        </Fab>\n        {/* add new contact dialog*/}\n        <Dialog\n          onClose={this.resetModalData}\n          open={this.state.shouldShowModal}\n        >\n          <DialogTitle id=\"form-dialog-title\">{this.state.isEdit ? 'Edit contact details' : 'Add contact details'}</DialogTitle>\n          {this.renderDialogContent()}\n          <DialogActions>\n            <Button\n              onClick={() => { this.onSavePressed() }}\n              size=\"small\" variant=\"text\" color=\"primary\">\n              <span className=\"actions\">{this.state.isEdit ? 'UPDATE' : 'SAVE'}</span>\n            </Button>\n            <Button\n              onClick={this.resetModalData}\n              size=\"small\" variant=\"text\" color=\"secondary\">\n              <span className=\"actions\">DISCARD</span>\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Snackbar\n          open={this.state.showSnackbar}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.state.snackbarText}</span>}\n        />\n        {\n          this.state.isLoading && <img src={spinner} alt=\"logo\" className=\"spinner\" />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}